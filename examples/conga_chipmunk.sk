//state_and_packet.pkt_0 = p.best_path_util_idx
//state_and_packet.pkt_1 = p.src
//state_and_packet.pkt_2 = p.best_path_idx
//state_and_packet.pkt_3 = p.util
//state_and_packet.pkt_4 = p.path_id

//state_and_packet.state_0 = best_path_util[p.best_path_util_idx]
//state_and_packet.state_1 = best_path[p.best_path_idx]

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
  state_and_packet.pkt_0 = state_and_packet.pkt_1 < 0 ? 0 : state_and_packet.pkt_1 % 256;
  state_and_packet.pkt_2 = state_and_packet.pkt_1 < 0 ? 0 : state_and_packet.pkt_1 % 256;
  if (state_and_packet.pkt_3 < state_and_packet.state_0) {
	state_and_packet.state_0 = state_and_packet.pkt_3;
	state_and_packet.state_1 = state_and_packet.pkt_4;
  } else if (state_and_packet.pkt_4 = state_and_packet.state_1) {
	state_and_packet.state_0 = state_and_packet.pkt_3;
  }

  return state_and_packet;
}

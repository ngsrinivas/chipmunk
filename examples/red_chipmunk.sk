//state_and_packet.pkt_0 = p.gain 
//state_and_packet.pkt_1 = p.q_inst
//state_and_packet.pkt_2 = p.mark
//state_and_packet.pkt_3 = p.prob

//state_and_packet.state_0 = q_avg

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
  state_and_packet.state_0 = (state_and_packet.pkt_0 * state_and_packet.state_0) + (1 - state_and_packet.pkt_0) * state_and_packet.pkt_1;
  if (state_and_packet.state_0 < 50){
	state_and_packet.pkt_2 = 0;
  } else if (state_and_packet.state_0 > 100) {
	state_and_packet.pkt_2 = 1;
  } else {
	state_and_packet.pkt_3 = (state_and_packet.state_0 - 50) * 100000 / (100 - 50);
	state_and_packet.pkt_2 = rand(state_and_packet.pkt_3);
  }
  return state_and_packet;
}

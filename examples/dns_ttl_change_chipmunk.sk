//state_and_packet.pkt_0 = p.id
//state_and_packet.pkt_1 = p.rdata
//state_and_packet.pkt_2 = p.ttl

//state_and_packet.state_0 = seen[p.id]
//state_and_packet.state_1 = last_ttl[p.id]
//state_and_packet.state_2 = ttl_change[p.id]

/*
void func(struct Packet p) {
  p.id = p.rdata;
  if (seen[p.id] == 0) {
    seen[p.id] = 1;
    last_ttl[p.id] = p.ttl;
    ttl_change[p.id] = 0;
  }
  else {
    if (last_ttl[p.id] != p.ttl) {
      last_ttl[p.id] = p.ttl;
      ttl_change[p.id] += 1;
    }
  }
}
*/
|StateAndPacket| program (|StateAndPacket| state_and_packet) {
  state_and_packet.pkt_0 = state_and_packet.pkt_1;
  if (state_and_packet.state_0 == 0){
	state_and_packet.state_0 = 1;
	state_and_packet.state_1 = state_and_packet.pkt_2;
	state_and_packet.state_2 = 0;
  } else {
	if (state_and_packet.state_1 != state_and_packet.pkt_2){
		state_and_packet.state_1 = state_and_packet.pkt_2;
		state_and_packet.state_2 += 1;
	}
  }
  return state_and_packet;
}
